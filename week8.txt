Week 8 : Linked List

Linked List
    => โครงสร้างข้อมูลที่ถูกออกแบบมาใช้เก็บข้อมูล (ข้อมูลแต่ละตัวเชื่อมกันเป็นสาย)


Sturcture
    => การกำหนดรูปแบบข้อมูลที่มีการรวบรวมข้อมูลหลายที่สัมพันธ์กัน อาจมีข้อมูลปรเภทต่างกัน
    Ex.
       struct student {
           char id[12];
           char name[40];
           int age;
       };

    - การประกาศตัวแปรประเภท Sturcture
          Ex. struct student std;

    - การประกาศตัวแปรพร้อมกำหนดค่าเริ่มต้นให้กับตัวแปรประเภท Sturcture
          Ex. struct student another_std = {"6211140123", "Josh Smith", 18};

    - ตัวแปร pointer -> Sturcture
          Ex.
          struct student std, *p_std;
        
          p_std = &std;
          printf("%s\n", (*p_std).name);
          (*p_std).age = 21;

    - typedef (กำหนดตัวแปรเพิ่มเติม)
          Ex. 
          //struct สามารถกำหนด struct student ให้เป็นข้อมูลใหม่ที่ใช้เพียง 1 คำแทนประเภทข้อมูลได้
             typedef struct student {
             char id[12];
             char name[40];
             int age;
             } Student;

    - Self-Referential Structures => struct ที่อ้างกลับไปยังโครงสร้างของตนเอง
           Ex.
              struct node {
                int data;
                struct node *next;
              };

              node => อ้างถึงหน่วยที่ออกแบบมาเพื่อเก็บข้อมูล 1 หน่วย
              struct node => เก็บข้อมูล 2 ตัว
                             1.) ฟิลด์ data เก็บข้อมูล int
                             2.) ฟิลด์ next เก็บตน.ในหน่วยค.จำของ node ถัดไป


    Ex. 
            #include <stdio.h>
            #include <stdlib.h>
            struct node {
                int data;
                struct node *next;
            };
            int main()
            {  struct node *head = NULL;
               struct node *first = NULL;
               struct node *second = NULL;
               struct node *third = NULL;
            
               first = (struct node *)malloc(sizeof(struct node));
               second = (struct node *)malloc(sizeof(struct node));
               third = (struct node *)malloc(sizeof(struct node));
            
               head = first;
               first->data = 17;
               first->next = second;
            
               second->data = 29;
               second->next = third;
            
               third->data = 93;
               third->next = NULL;
            }
            

    - Singly Linked List => โหนดที่อยู่ติดกันเชื่อมต่อถึงกันผ่านลิงก์เดียว
    

    - Doubly Linked List => โหนดที่อยู่ติดกันเชื่อมต่อถึงกันผ่าน 2 ลิงก์